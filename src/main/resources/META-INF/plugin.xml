<idea-plugin>
    <id>com.sunny.plugin.MockitoGenPlugin</id>
    <name>JUnit 5 Mockito Code Generator</name>
    <vendor email="sunnypelletier01@gmail.com" url="https://github.com/pelletier197/">Sunny Pelletier</vendor>

    <description><![CDATA[
      The plugin generates boilerplate Mockito JUnit 5 code that usually needs to be added manually to unit tests.

      This plugin requires your project to use the following dependencies:
      <ul>
        <li><a href="https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api">JUnit 5 (Jupiter)</a> </li>
        <li><a href="https://mvnrepository.com/artifact/org.mockito/mockito-core">Mockito Core</a></li>
        <li><a href="https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter">Mockito JUnit Jupiter Plugin</a></li>
        <li><a href="https://mvnrepository.com/artifact/org.assertj/assertj-core">AssertJ (optional)</a></li>
      </ul>

      <p>
          The plugin auto-generates the following:
          <ul>
              <li><code>ExtendWith(MockitoExtension.class)</code> annotation on the test class</li>
              <li>Mocked fields for each non-static object declared in the test subject</li>
              <li>Primary type variables and standard final classes (Instant, ZonedDateTime, UUID, Enums) for tested classes and methods</li>
              <li>Field for the test subject with <code>@InjectMocks</code> annotation</li>
              <li>Nested classed with <code>@Nested</code> to test each accessible method of the tested class with the fields required in input mocked</li>
              <li>static imports for useful mockito functions like <code>when</code>, <code>verify</code> and AssertJ <code>assertThat</code> if it is available</li>
          </ul>
      </p>

      <p>
        There are two ways to get the plugin to generate your code:
        <ul>
          <li>From inside the test class, hit <code>alt+insert</code>, and then hit <code>Add Mockito JUnit 5 Code</code></li>
          <li>Right click on the test class and select <code>Generate</code>. Then hit <code>Add Mockito JUnit 5 Code</code></li>
        </ul>
      </p>
      <p>
        Project is an open source project available on <a href="https://github.com/pelletier197/intellij-mockito-junit5-code-generator">GitHub</a>. Feel free to suggest new features or open merge requests.
      </p>

      <p>Plugin was modified from an existing plugin: <a>https://github.com/przemyslawj/mockito-intellij-plugin</a> and then modified to use JUnit 5 and generate nested class methods.

      <b>My other projects</b>
      <ul>
          <li><a href="https://github.com/magidoc-org/magidoc">Magidoc, a GraphQL documentation generator</a></li>
          <li><a href="https://github.com/pelletier197/Mockkator">Mockkator, Intellij plugin to generate boilerplate code for Mockk</a></li>
          <li><a href="https://github.com/pelletier197/Fixkture">Fixkture, an Intellij plugin that generates class instances using random fields</a></li>
          <li><a href="https://github.com/pelletier197/kotlin-stream-csv">Kotlin stream CSV, an error-resilient CSV parser</a></li>
      </ul>
    ]]></description>

    <change-notes><![CDATA[
      <b>Version 1.5</b>
      <ul>
        <li>Upgrade to support recent versions of Intellij</li>
      </ul>
      <b>Version 1.4</b>
      <ul>
        <li>Ignore all Lombok generated methods</li>
        <li>Support mocking fields of super class of tested class by default</li>
        <li>Remove default test method from test</li>
       </ul>
      <b>Version 1.3</b>
      <ul>
        <li>Add support for enums</li>
        <li>Name fields using the field name instead of the type. If the object tested has more than one instance of the mocked object, then they are mocked independently.</li>
      </ul>
      <b>Version 1.2</b>
      <ul>
        <li>Add support for primary types and final types like Instant, ZonedDateTime and UUID</li>
        <li>Add support to generate a single mocked element of an iterable (List, Set)</li>
        <li>Add a sample test method with a default name</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
    </extensions>

    <application-components>
        <component>
            <implementation-class>com.pelletier197.plugin.MockitoGenPlugin</implementation-class>
        </component>
        <!-- Add your application components here -->
    </application-components>

    <actions>
        <!-- Add your actions here -->
        <action id="org.pelletier197.plugin.action.MockitoGenPlugin" class="com.pelletier197.plugin.action.GenMockitoCodeAction"
                text="Add Mockito JUnit 5 Code" description="Create new Mockito test using JUnit 5">
            <add-to-group group-id="GenerateGroup" anchor="first"/>
        </action>
    </actions>

    <depends>com.intellij.modules.java</depends>
</idea-plugin>
