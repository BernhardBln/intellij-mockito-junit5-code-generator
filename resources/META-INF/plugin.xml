<idea-plugin>
    <id>com.sunny.plugin.MockitoGenPlugin</id>
    <name>JUnit 5 Mockito code generator</name>
    <version>1.4.0</version>
    <vendor email="sunnypelletier01@gmail.com" url="https://gitlab.com/pelletier197">Sunny Pelletier</vendor>

    <description><![CDATA[
      The plugin generates boilerplate Mockito JUnit 5 code that usually needs to be added manually to unit tests.

      <p>
      Auto-generated are:
      <ul>
          <li><code>ExtendWith(MockitoExtension.class)</code> annotation for the class</li>
          <li>Mocked fields for each non-static object declared in the test subject</li>
          <li>Primary type variables and standard final classes (Instant, ZonedDateTime, UUID, Enums) for tested classes and methods</li>
          <li>Field for the test subject with <code>@InjectMocks</code> annotation</li>
          <li>static imports for useful mockito functions like <code>when</code>, <code>verify</code> and AssertJ <code>assertThat</code> if it is available</li>
          <li>Nested classed with <code>@Nested</code> to test each accessible method of the tested class with the fields required in input mocked</li>
      </ul>
      </p>

      <p>
        To generate the Mockito code with the plugin hit <code>alt + insert</code> on your test class or choose the action from
      "Generate Action" context menu and hit "Add Mockito JUnit 5 code".

      Another binding exists to <code>ctrl + shift + M</code> that will do the same thing.
      </p>
      <p>
        Project is an open source project available at <a>https://gitlab.com/pelletier197/intellij-mockito-junit-5-code-generator</a>. Feel free to suggest new features or do merge requests.
      </p>
      <p>Plugin was modified from an existing plugin: <a>https://github.com/przemyslawj/mockito-intellij-plugin</a> and then modified to use JUnit 5 and generate nested class methods.
    ]]></description>

    <change-notes><![CDATA[
      <span>1.4</span>
      <ul>
        <li>Ignore all Lombok generated methods</li>
        <li>Support mocking fields of super class of tested class by default</li>
        <li>Remove default test method from test</li>
       </ul>
      <span>1.3</span>
      <ul>
        <li>Add support for enums</li>
        <li>Name fields using the field name instead of the type. If the object tested has more than one instance of the mocked object, then they are mocked independently.</li>
      </ul>
      <span>1.2</span>
      <ul>
        <li>Add support for primary types and final types like Instant, ZonedDateTime and UUID</li>
        <li>Add support to generate a single mocked element of an iterable (List, Set)</li>
        <li>Add a sample test method with a default name</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="131"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
    </extensions>

    <application-components>
        <component>
            <implementation-class>com.sunny.plugin.MockitoGenPlugin</implementation-class>
        </component>
        <!-- Add your application components here -->
    </application-components>

    <actions>
        <!-- Add your actions here -->
        <action id="org.mockito.plugin.action.GenMockitoCodeAction" class="com.sunny.plugin.action.GenMockitoCodeAction"
                text="Add Mockito JUnit 5 code" description="create new Mockito test using JUnit 5">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl M"/>
        </action>
    </actions>

    <depends>com.intellij.modules.java</depends>
</idea-plugin>
